// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram.chatlists

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator
import tl.telegram.Chat
import tl.telegram.Peer
import tl.telegram.User

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface ChatlistsChatlistInvite {
    @Serializable
    @SerialName("chatlists.chatlistInviteAlready")
    @TLCombinatorId(0xFA87F659)
    public data class ChatlistInviteAlready(
        @SerialName("filter_id")
        @get:JvmName("filterId")
        public val filterId: Int,
        @SerialName("missing_peers")
        @get:JvmName("missingPeers")
        public val missingPeers: List<Peer>,
        @SerialName("already_peers")
        @get:JvmName("alreadyPeers")
        public val alreadyPeers: List<Peer>,
        @get:JvmName("chats")
        public val chats: List<Chat>,
        @get:JvmName("users")
        public val users: List<User>,
    ) : ChatlistsChatlistInvite {
        public companion object
    }

    @Serializable
    @SerialName("chatlists.chatlistInvite")
    @TLCombinatorId(0x1DCD839D)
    public data class ChatlistInvite(
        @get:JvmName("flags")
        public val flags: Int,
        @get:JvmName("title")
        public val title: String,
        @TLConditional("flags", 0)
        @get:JvmName("emoticon")
        public val emoticon: String? = null,
        @get:JvmName("peers")
        public val peers: List<Peer>,
        @get:JvmName("chats")
        public val chats: List<Chat>,
        @get:JvmName("users")
        public val users: List<User>,
    ) : ChatlistsChatlistInvite {
        public companion object
    }

    public companion object
}
