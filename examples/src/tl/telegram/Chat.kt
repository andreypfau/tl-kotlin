// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface Chat {
    @Serializable
    @SerialName("chatEmpty")
    @TLCombinatorId(0x29562865)
    public data class ChatEmpty(
        @get:JvmName("id")
        public val id: Long,
    ) : tl.telegram.Chat {
        public companion object
    }

    @Serializable
    @SerialName("chat")
    @TLCombinatorId(0x41CBF256)
    public data class Chat(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("creator")
        public val creator: Unit? = null,
        @TLConditional("flags", 2)
        @get:JvmName("left")
        public val left: Unit? = null,
        @TLConditional("flags", 5)
        @get:JvmName("deactivated")
        public val deactivated: Unit? = null,
        @SerialName("call_active")
        @TLConditional("flags", 23)
        @get:JvmName("callActive")
        public val callActive: Unit? = null,
        @SerialName("call_not_empty")
        @TLConditional("flags", 24)
        @get:JvmName("callNotEmpty")
        public val callNotEmpty: Unit? = null,
        @TLConditional("flags", 25)
        @get:JvmName("noforwards")
        public val noforwards: Unit? = null,
        @get:JvmName("id")
        public val id: Long,
        @get:JvmName("title")
        public val title: String,
        @get:JvmName("photo")
        public val photo: ChatPhoto,
        @SerialName("participants_count")
        @get:JvmName("participantsCount")
        public val participantsCount: Int,
        @get:JvmName("date")
        public val date: Int,
        @get:JvmName("version")
        public val version: Int,
        @SerialName("migrated_to")
        @TLConditional("flags", 6)
        @get:JvmName("migratedTo")
        public val migratedTo: InputChannel? = null,
        @SerialName("admin_rights")
        @TLConditional("flags", 14)
        @get:JvmName("adminRights")
        public val adminRights: ChatAdminRights? = null,
        @SerialName("default_banned_rights")
        @TLConditional("flags", 18)
        @get:JvmName("defaultBannedRights")
        public val defaultBannedRights: ChatBannedRights? = null,
    ) : tl.telegram.Chat {
        public companion object
    }

    @Serializable
    @SerialName("chatForbidden")
    @TLCombinatorId(0x6592A1A7)
    public data class ChatForbidden(
        @get:JvmName("id")
        public val id: Long,
        @get:JvmName("title")
        public val title: String,
    ) : tl.telegram.Chat {
        public companion object
    }

    @Serializable
    @SerialName("channel")
    @TLCombinatorId(0x1981EA7E)
    public data class Channel(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("creator")
        public val creator: Unit? = null,
        @TLConditional("flags", 2)
        @get:JvmName("left")
        public val left: Unit? = null,
        @TLConditional("flags", 5)
        @get:JvmName("broadcast")
        public val broadcast: Unit? = null,
        @TLConditional("flags", 7)
        @get:JvmName("verified")
        public val verified: Unit? = null,
        @TLConditional("flags", 8)
        @get:JvmName("megagroup")
        public val megagroup: Unit? = null,
        @TLConditional("flags", 9)
        @get:JvmName("restricted")
        public val restricted: Unit? = null,
        @TLConditional("flags", 11)
        @get:JvmName("signatures")
        public val signatures: Unit? = null,
        @TLConditional("flags", 12)
        @get:JvmName("min")
        public val min: Unit? = null,
        @TLConditional("flags", 19)
        @get:JvmName("scam")
        public val scam: Unit? = null,
        @SerialName("has_link")
        @TLConditional("flags", 20)
        @get:JvmName("hasLink")
        public val hasLink: Unit? = null,
        @SerialName("has_geo")
        @TLConditional("flags", 21)
        @get:JvmName("hasGeo")
        public val hasGeo: Unit? = null,
        @SerialName("slowmode_enabled")
        @TLConditional("flags", 22)
        @get:JvmName("slowmodeEnabled")
        public val slowmodeEnabled: Unit? = null,
        @SerialName("call_active")
        @TLConditional("flags", 23)
        @get:JvmName("callActive")
        public val callActive: Unit? = null,
        @SerialName("call_not_empty")
        @TLConditional("flags", 24)
        @get:JvmName("callNotEmpty")
        public val callNotEmpty: Unit? = null,
        @TLConditional("flags", 25)
        @get:JvmName("fake")
        public val fake: Unit? = null,
        @TLConditional("flags", 26)
        @get:JvmName("gigagroup")
        public val gigagroup: Unit? = null,
        @TLConditional("flags", 27)
        @get:JvmName("noforwards")
        public val noforwards: Unit? = null,
        @SerialName("join_to_send")
        @TLConditional("flags", 28)
        @get:JvmName("joinToSend")
        public val joinToSend: Unit? = null,
        @SerialName("join_request")
        @TLConditional("flags", 29)
        @get:JvmName("joinRequest")
        public val joinRequest: Unit? = null,
        @TLConditional("flags", 30)
        @get:JvmName("forum")
        public val forum: Unit? = null,
        @get:JvmName("flags2")
        public val flags2: Int,
        @SerialName("stories_hidden")
        @TLConditional("flags2", 1)
        @get:JvmName("storiesHidden")
        public val storiesHidden: Unit? = null,
        @SerialName("stories_hidden_min")
        @TLConditional("flags2", 2)
        @get:JvmName("storiesHiddenMin")
        public val storiesHiddenMin: Unit? = null,
        @SerialName("stories_unavailable")
        @TLConditional("flags2", 3)
        @get:JvmName("storiesUnavailable")
        public val storiesUnavailable: Unit? = null,
        @get:JvmName("id")
        public val id: Long,
        @SerialName("access_hash")
        @TLConditional("flags", 13)
        @get:JvmName("accessHash")
        public val accessHash: Long? = null,
        @get:JvmName("title")
        public val title: String,
        @TLConditional("flags", 6)
        @get:JvmName("username")
        public val username: String? = null,
        @get:JvmName("photo")
        public val photo: ChatPhoto,
        @get:JvmName("date")
        public val date: Int,
        @SerialName("restriction_reason")
        @TLConditional("flags", 9)
        @get:JvmName("restrictionReason")
        public val restrictionReason: List<RestrictionReason>? = null,
        @SerialName("admin_rights")
        @TLConditional("flags", 14)
        @get:JvmName("adminRights")
        public val adminRights: ChatAdminRights? = null,
        @SerialName("banned_rights")
        @TLConditional("flags", 15)
        @get:JvmName("bannedRights")
        public val bannedRights: ChatBannedRights? = null,
        @SerialName("default_banned_rights")
        @TLConditional("flags", 18)
        @get:JvmName("defaultBannedRights")
        public val defaultBannedRights: ChatBannedRights? = null,
        @SerialName("participants_count")
        @TLConditional("flags", 17)
        @get:JvmName("participantsCount")
        public val participantsCount: Int? = null,
        @TLConditional("flags2", 0)
        @get:JvmName("usernames")
        public val usernames: List<Username>? = null,
        @SerialName("stories_max_id")
        @TLConditional("flags2", 4)
        @get:JvmName("storiesMaxId")
        public val storiesMaxId: Int? = null,
        @TLConditional("flags2", 6)
        @get:JvmName("color")
        public val color: Int? = null,
        @SerialName("background_emoji_id")
        @TLConditional("flags2", 5)
        @get:JvmName("backgroundEmojiId")
        public val backgroundEmojiId: Long? = null,
    ) : tl.telegram.Chat {
        public companion object
    }

    @Serializable
    @SerialName("channelForbidden")
    @TLCombinatorId(0x17D493D5)
    public data class ChannelForbidden(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 5)
        @get:JvmName("broadcast")
        public val broadcast: Unit? = null,
        @TLConditional("flags", 8)
        @get:JvmName("megagroup")
        public val megagroup: Unit? = null,
        @get:JvmName("id")
        public val id: Long,
        @SerialName("access_hash")
        @get:JvmName("accessHash")
        public val accessHash: Long,
        @get:JvmName("title")
        public val title: String,
        @SerialName("until_date")
        @TLConditional("flags", 16)
        @get:JvmName("untilDate")
        public val untilDate: Int? = null,
    ) : tl.telegram.Chat {
        public companion object
    }

    public companion object
}
