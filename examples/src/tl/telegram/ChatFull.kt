// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface ChatFull {
    @Serializable
    @SerialName("chatFull")
    @TLCombinatorId(0xC9D31138)
    public data class ChatFull(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("can_set_username")
        @TLConditional("flags", 7)
        @get:JvmName("canSetUsername")
        public val canSetUsername: Unit? = null,
        @SerialName("has_scheduled")
        @TLConditional("flags", 8)
        @get:JvmName("hasScheduled")
        public val hasScheduled: Unit? = null,
        @SerialName("translations_disabled")
        @TLConditional("flags", 19)
        @get:JvmName("translationsDisabled")
        public val translationsDisabled: Unit? = null,
        @get:JvmName("id")
        public val id: Long,
        @get:JvmName("about")
        public val about: String,
        @get:JvmName("participants")
        public val participants: ChatParticipants,
        @SerialName("chat_photo")
        @TLConditional("flags", 2)
        @get:JvmName("chatPhoto")
        public val chatPhoto: Photo? = null,
        @SerialName("notify_settings")
        @get:JvmName("notifySettings")
        public val notifySettings: PeerNotifySettings,
        @SerialName("exported_invite")
        @TLConditional("flags", 13)
        @get:JvmName("exportedInvite")
        public val exportedInvite: ExportedChatInvite? = null,
        @SerialName("bot_info")
        @TLConditional("flags", 3)
        @get:JvmName("botInfo")
        public val botInfo: List<BotInfo>? = null,
        @SerialName("pinned_msg_id")
        @TLConditional("flags", 6)
        @get:JvmName("pinnedMsgId")
        public val pinnedMsgId: Int? = null,
        @SerialName("folder_id")
        @TLConditional("flags", 11)
        @get:JvmName("folderId")
        public val folderId: Int? = null,
        @TLConditional("flags", 12)
        @get:JvmName("call")
        public val call: InputGroupCall? = null,
        @SerialName("ttl_period")
        @TLConditional("flags", 14)
        @get:JvmName("ttlPeriod")
        public val ttlPeriod: Int? = null,
        @SerialName("groupcall_default_join_as")
        @TLConditional("flags", 15)
        @get:JvmName("groupcallDefaultJoinAs")
        public val groupcallDefaultJoinAs: Peer? = null,
        @SerialName("theme_emoticon")
        @TLConditional("flags", 16)
        @get:JvmName("themeEmoticon")
        public val themeEmoticon: String? = null,
        @SerialName("requests_pending")
        @TLConditional("flags", 17)
        @get:JvmName("requestsPending")
        public val requestsPending: Int? = null,
        @SerialName("recent_requesters")
        @TLConditional("flags", 17)
        @get:JvmName("recentRequesters")
        public val recentRequesters: List<Long>? = null,
        @SerialName("available_reactions")
        @TLConditional("flags", 18)
        @get:JvmName("availableReactions")
        public val availableReactions: ChatReactions? = null,
    ) : tl.telegram.ChatFull {
        public companion object
    }

    @Serializable
    @SerialName("channelFull")
    @TLCombinatorId(0x723027BD)
    public data class ChannelFull(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("can_view_participants")
        @TLConditional("flags", 3)
        @get:JvmName("canViewParticipants")
        public val canViewParticipants: Unit? = null,
        @SerialName("can_set_username")
        @TLConditional("flags", 6)
        @get:JvmName("canSetUsername")
        public val canSetUsername: Unit? = null,
        @SerialName("can_set_stickers")
        @TLConditional("flags", 7)
        @get:JvmName("canSetStickers")
        public val canSetStickers: Unit? = null,
        @SerialName("hidden_prehistory")
        @TLConditional("flags", 10)
        @get:JvmName("hiddenPrehistory")
        public val hiddenPrehistory: Unit? = null,
        @SerialName("can_set_location")
        @TLConditional("flags", 16)
        @get:JvmName("canSetLocation")
        public val canSetLocation: Unit? = null,
        @SerialName("has_scheduled")
        @TLConditional("flags", 19)
        @get:JvmName("hasScheduled")
        public val hasScheduled: Unit? = null,
        @SerialName("can_view_stats")
        @TLConditional("flags", 20)
        @get:JvmName("canViewStats")
        public val canViewStats: Unit? = null,
        @TLConditional("flags", 22)
        @get:JvmName("blocked")
        public val blocked: Unit? = null,
        @get:JvmName("flags2")
        public val flags2: Int,
        @SerialName("can_delete_channel")
        @TLConditional("flags2", 0)
        @get:JvmName("canDeleteChannel")
        public val canDeleteChannel: Unit? = null,
        @TLConditional("flags2", 1)
        @get:JvmName("antispam")
        public val antispam: Unit? = null,
        @SerialName("participants_hidden")
        @TLConditional("flags2", 2)
        @get:JvmName("participantsHidden")
        public val participantsHidden: Unit? = null,
        @SerialName("translations_disabled")
        @TLConditional("flags2", 3)
        @get:JvmName("translationsDisabled")
        public val translationsDisabled: Unit? = null,
        @SerialName("stories_pinned_available")
        @TLConditional("flags2", 5)
        @get:JvmName("storiesPinnedAvailable")
        public val storiesPinnedAvailable: Unit? = null,
        @get:JvmName("id")
        public val id: Long,
        @get:JvmName("about")
        public val about: String,
        @SerialName("participants_count")
        @TLConditional("flags", 0)
        @get:JvmName("participantsCount")
        public val participantsCount: Int? = null,
        @SerialName("admins_count")
        @TLConditional("flags", 1)
        @get:JvmName("adminsCount")
        public val adminsCount: Int? = null,
        @SerialName("kicked_count")
        @TLConditional("flags", 2)
        @get:JvmName("kickedCount")
        public val kickedCount: Int? = null,
        @SerialName("banned_count")
        @TLConditional("flags", 2)
        @get:JvmName("bannedCount")
        public val bannedCount: Int? = null,
        @SerialName("online_count")
        @TLConditional("flags", 13)
        @get:JvmName("onlineCount")
        public val onlineCount: Int? = null,
        @SerialName("read_inbox_max_id")
        @get:JvmName("readInboxMaxId")
        public val readInboxMaxId: Int,
        @SerialName("read_outbox_max_id")
        @get:JvmName("readOutboxMaxId")
        public val readOutboxMaxId: Int,
        @SerialName("unread_count")
        @get:JvmName("unreadCount")
        public val unreadCount: Int,
        @SerialName("chat_photo")
        @get:JvmName("chatPhoto")
        public val chatPhoto: Photo,
        @SerialName("notify_settings")
        @get:JvmName("notifySettings")
        public val notifySettings: PeerNotifySettings,
        @SerialName("exported_invite")
        @TLConditional("flags", 23)
        @get:JvmName("exportedInvite")
        public val exportedInvite: ExportedChatInvite? = null,
        @SerialName("bot_info")
        @get:JvmName("botInfo")
        public val botInfo: List<BotInfo>,
        @SerialName("migrated_from_chat_id")
        @TLConditional("flags", 4)
        @get:JvmName("migratedFromChatId")
        public val migratedFromChatId: Long? = null,
        @SerialName("migrated_from_max_id")
        @TLConditional("flags", 4)
        @get:JvmName("migratedFromMaxId")
        public val migratedFromMaxId: Int? = null,
        @SerialName("pinned_msg_id")
        @TLConditional("flags", 5)
        @get:JvmName("pinnedMsgId")
        public val pinnedMsgId: Int? = null,
        @TLConditional("flags", 8)
        @get:JvmName("stickerset")
        public val stickerset: StickerSet? = null,
        @SerialName("available_min_id")
        @TLConditional("flags", 9)
        @get:JvmName("availableMinId")
        public val availableMinId: Int? = null,
        @SerialName("folder_id")
        @TLConditional("flags", 11)
        @get:JvmName("folderId")
        public val folderId: Int? = null,
        @SerialName("linked_chat_id")
        @TLConditional("flags", 14)
        @get:JvmName("linkedChatId")
        public val linkedChatId: Long? = null,
        @TLConditional("flags", 15)
        @get:JvmName("location")
        public val location: ChannelLocation? = null,
        @SerialName("slowmode_seconds")
        @TLConditional("flags", 17)
        @get:JvmName("slowmodeSeconds")
        public val slowmodeSeconds: Int? = null,
        @SerialName("slowmode_next_send_date")
        @TLConditional("flags", 18)
        @get:JvmName("slowmodeNextSendDate")
        public val slowmodeNextSendDate: Int? = null,
        @SerialName("stats_dc")
        @TLConditional("flags", 12)
        @get:JvmName("statsDc")
        public val statsDc: Int? = null,
        @get:JvmName("pts")
        public val pts: Int,
        @TLConditional("flags", 21)
        @get:JvmName("call")
        public val call: InputGroupCall? = null,
        @SerialName("ttl_period")
        @TLConditional("flags", 24)
        @get:JvmName("ttlPeriod")
        public val ttlPeriod: Int? = null,
        @SerialName("pending_suggestions")
        @TLConditional("flags", 25)
        @get:JvmName("pendingSuggestions")
        public val pendingSuggestions: List<String>? = null,
        @SerialName("groupcall_default_join_as")
        @TLConditional("flags", 26)
        @get:JvmName("groupcallDefaultJoinAs")
        public val groupcallDefaultJoinAs: Peer? = null,
        @SerialName("theme_emoticon")
        @TLConditional("flags", 27)
        @get:JvmName("themeEmoticon")
        public val themeEmoticon: String? = null,
        @SerialName("requests_pending")
        @TLConditional("flags", 28)
        @get:JvmName("requestsPending")
        public val requestsPending: Int? = null,
        @SerialName("recent_requesters")
        @TLConditional("flags", 28)
        @get:JvmName("recentRequesters")
        public val recentRequesters: List<Long>? = null,
        @SerialName("default_send_as")
        @TLConditional("flags", 29)
        @get:JvmName("defaultSendAs")
        public val defaultSendAs: Peer? = null,
        @SerialName("available_reactions")
        @TLConditional("flags", 30)
        @get:JvmName("availableReactions")
        public val availableReactions: ChatReactions? = null,
        @TLConditional("flags2", 4)
        @get:JvmName("stories")
        public val stories: PeerStories? = null,
    ) : tl.telegram.ChatFull {
        public companion object
    }

    public companion object
}
