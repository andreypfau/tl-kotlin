// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
@SerialName("userFull")
@TLCombinatorId(0xB9B12C6C)
public data class UserFull(
    @get:JvmName("flags")
    public val flags: Int,
    @TLConditional("flags", 0)
    @get:JvmName("blocked")
    public val blocked: Unit? = null,
    @SerialName("phone_calls_available")
    @TLConditional("flags", 4)
    @get:JvmName("phoneCallsAvailable")
    public val phoneCallsAvailable: Unit? = null,
    @SerialName("phone_calls_private")
    @TLConditional("flags", 5)
    @get:JvmName("phoneCallsPrivate")
    public val phoneCallsPrivate: Unit? = null,
    @SerialName("can_pin_message")
    @TLConditional("flags", 7)
    @get:JvmName("canPinMessage")
    public val canPinMessage: Unit? = null,
    @SerialName("has_scheduled")
    @TLConditional("flags", 12)
    @get:JvmName("hasScheduled")
    public val hasScheduled: Unit? = null,
    @SerialName("video_calls_available")
    @TLConditional("flags", 13)
    @get:JvmName("videoCallsAvailable")
    public val videoCallsAvailable: Unit? = null,
    @SerialName("voice_messages_forbidden")
    @TLConditional("flags", 20)
    @get:JvmName("voiceMessagesForbidden")
    public val voiceMessagesForbidden: Unit? = null,
    @SerialName("translations_disabled")
    @TLConditional("flags", 23)
    @get:JvmName("translationsDisabled")
    public val translationsDisabled: Unit? = null,
    @SerialName("stories_pinned_available")
    @TLConditional("flags", 26)
    @get:JvmName("storiesPinnedAvailable")
    public val storiesPinnedAvailable: Unit? = null,
    @SerialName("blocked_my_stories_from")
    @TLConditional("flags", 27)
    @get:JvmName("blockedMyStoriesFrom")
    public val blockedMyStoriesFrom: Unit? = null,
    @get:JvmName("id")
    public val id: Long,
    @TLConditional("flags", 1)
    @get:JvmName("about")
    public val about: String? = null,
    @get:JvmName("settings")
    public val settings: PeerSettings,
    @SerialName("personal_photo")
    @TLConditional("flags", 21)
    @get:JvmName("personalPhoto")
    public val personalPhoto: Photo? = null,
    @SerialName("profile_photo")
    @TLConditional("flags", 2)
    @get:JvmName("profilePhoto")
    public val profilePhoto: Photo? = null,
    @SerialName("fallback_photo")
    @TLConditional("flags", 22)
    @get:JvmName("fallbackPhoto")
    public val fallbackPhoto: Photo? = null,
    @SerialName("notify_settings")
    @get:JvmName("notifySettings")
    public val notifySettings: PeerNotifySettings,
    @SerialName("bot_info")
    @TLConditional("flags", 3)
    @get:JvmName("botInfo")
    public val botInfo: BotInfo? = null,
    @SerialName("pinned_msg_id")
    @TLConditional("flags", 6)
    @get:JvmName("pinnedMsgId")
    public val pinnedMsgId: Int? = null,
    @SerialName("common_chats_count")
    @get:JvmName("commonChatsCount")
    public val commonChatsCount: Int,
    @SerialName("folder_id")
    @TLConditional("flags", 11)
    @get:JvmName("folderId")
    public val folderId: Int? = null,
    @SerialName("ttl_period")
    @TLConditional("flags", 14)
    @get:JvmName("ttlPeriod")
    public val ttlPeriod: Int? = null,
    @SerialName("theme_emoticon")
    @TLConditional("flags", 15)
    @get:JvmName("themeEmoticon")
    public val themeEmoticon: String? = null,
    @SerialName("private_forward_name")
    @TLConditional("flags", 16)
    @get:JvmName("privateForwardName")
    public val privateForwardName: String? = null,
    @SerialName("bot_group_admin_rights")
    @TLConditional("flags", 17)
    @get:JvmName("botGroupAdminRights")
    public val botGroupAdminRights: ChatAdminRights? = null,
    @SerialName("bot_broadcast_admin_rights")
    @TLConditional("flags", 18)
    @get:JvmName("botBroadcastAdminRights")
    public val botBroadcastAdminRights: ChatAdminRights? = null,
    @SerialName("premium_gifts")
    @TLConditional("flags", 19)
    @get:JvmName("premiumGifts")
    public val premiumGifts: List<PremiumGiftOption>? = null,
    @TLConditional("flags", 24)
    @get:JvmName("wallpaper")
    public val wallpaper: WallPaper? = null,
    @TLConditional("flags", 25)
    @get:JvmName("stories")
    public val stories: PeerStories? = null,
) {
    public companion object
}
