// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
@SerialName("inputSecureValue")
@TLCombinatorId(0xDB21D0A7)
public data class InputSecureValue(
    @get:JvmName("flags")
    public val flags: Int,
    @get:JvmName("type")
    public val type: SecureValueType,
    @TLConditional("flags", 0)
    @get:JvmName("data")
    public val `data`: SecureData? = null,
    @SerialName("front_side")
    @TLConditional("flags", 1)
    @get:JvmName("frontSide")
    public val frontSide: InputSecureFile? = null,
    @SerialName("reverse_side")
    @TLConditional("flags", 2)
    @get:JvmName("reverseSide")
    public val reverseSide: InputSecureFile? = null,
    @TLConditional("flags", 3)
    @get:JvmName("selfie")
    public val selfie: InputSecureFile? = null,
    @TLConditional("flags", 6)
    @get:JvmName("translation")
    public val translation: List<InputSecureFile>? = null,
    @TLConditional("flags", 4)
    @get:JvmName("files")
    public val files: List<InputSecureFile>? = null,
    @SerialName("plain_data")
    @TLConditional("flags", 5)
    @get:JvmName("plainData")
    public val plainData: SecurePlainData? = null,
) {
    public companion object
}
