// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface WebPage {
    @Serializable
    @SerialName("webPageEmpty")
    @TLCombinatorId(0x211A1788)
    public data class WebPageEmpty(
        @get:JvmName("flags")
        public val flags: Int,
        @get:JvmName("id")
        public val id: Long,
        @TLConditional("flags", 0)
        @get:JvmName("url")
        public val url: String? = null,
    ) : tl.telegram.WebPage {
        public companion object
    }

    @Serializable
    @SerialName("webPagePending")
    @TLCombinatorId(0xB0D13E47)
    public data class WebPagePending(
        @get:JvmName("flags")
        public val flags: Int,
        @get:JvmName("id")
        public val id: Long,
        @TLConditional("flags", 0)
        @get:JvmName("url")
        public val url: String? = null,
        @get:JvmName("date")
        public val date: Int,
    ) : tl.telegram.WebPage {
        public companion object
    }

    @Serializable
    @SerialName("webPage")
    @TLCombinatorId(0xE89C45B2)
    public data class WebPage(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("has_large_media")
        @TLConditional("flags", 13)
        @get:JvmName("hasLargeMedia")
        public val hasLargeMedia: Unit? = null,
        @get:JvmName("id")
        public val id: Long,
        @get:JvmName("url")
        public val url: String,
        @SerialName("display_url")
        @get:JvmName("displayUrl")
        public val displayUrl: String,
        @get:JvmName("hash")
        public val hash: Int,
        @TLConditional("flags", 0)
        @get:JvmName("type")
        public val type: String? = null,
        @SerialName("site_name")
        @TLConditional("flags", 1)
        @get:JvmName("siteName")
        public val siteName: String? = null,
        @TLConditional("flags", 2)
        @get:JvmName("title")
        public val title: String? = null,
        @TLConditional("flags", 3)
        @get:JvmName("description")
        public val description: String? = null,
        @TLConditional("flags", 4)
        @get:JvmName("photo")
        public val photo: Photo? = null,
        @SerialName("embed_url")
        @TLConditional("flags", 5)
        @get:JvmName("embedUrl")
        public val embedUrl: String? = null,
        @SerialName("embed_type")
        @TLConditional("flags", 5)
        @get:JvmName("embedType")
        public val embedType: String? = null,
        @SerialName("embed_width")
        @TLConditional("flags", 6)
        @get:JvmName("embedWidth")
        public val embedWidth: Int? = null,
        @SerialName("embed_height")
        @TLConditional("flags", 6)
        @get:JvmName("embedHeight")
        public val embedHeight: Int? = null,
        @TLConditional("flags", 7)
        @get:JvmName("duration")
        public val duration: Int? = null,
        @TLConditional("flags", 8)
        @get:JvmName("author")
        public val author: String? = null,
        @TLConditional("flags", 9)
        @get:JvmName("document")
        public val document: Document? = null,
        @SerialName("cached_page")
        @TLConditional("flags", 10)
        @get:JvmName("cachedPage")
        public val cachedPage: Page? = null,
        @TLConditional("flags", 12)
        @get:JvmName("attributes")
        public val attributes: List<WebPageAttribute>? = null,
    ) : tl.telegram.WebPage {
        public companion object
    }

    @Serializable
    @SerialName("webPageNotModified")
    @TLCombinatorId(0x7311CA11)
    public data class WebPageNotModified(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("cached_page_views")
        @TLConditional("flags", 0)
        @get:JvmName("cachedPageViews")
        public val cachedPageViews: Int? = null,
    ) : tl.telegram.WebPage {
        public companion object
    }

    public companion object
}
