// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
@SerialName("config")
@TLCombinatorId(0xCC1A241E)
public data class Config(
    @get:JvmName("flags")
    public val flags: Int,
    @SerialName("default_p2p_contacts")
    @TLConditional("flags", 3)
    @get:JvmName("defaultP2pContacts")
    public val defaultP2pContacts: Unit? = null,
    @SerialName("preload_featured_stickers")
    @TLConditional("flags", 4)
    @get:JvmName("preloadFeaturedStickers")
    public val preloadFeaturedStickers: Unit? = null,
    @SerialName("revoke_pm_inbox")
    @TLConditional("flags", 6)
    @get:JvmName("revokePmInbox")
    public val revokePmInbox: Unit? = null,
    @SerialName("blocked_mode")
    @TLConditional("flags", 8)
    @get:JvmName("blockedMode")
    public val blockedMode: Unit? = null,
    @SerialName("force_try_ipv6")
    @TLConditional("flags", 14)
    @get:JvmName("forceTryIpv6")
    public val forceTryIpv6: Unit? = null,
    @get:JvmName("date")
    public val date: Int,
    @get:JvmName("expires")
    public val expires: Int,
    @SerialName("test_mode")
    @get:JvmName("testMode")
    public val testMode: Boolean,
    @SerialName("this_dc")
    @get:JvmName("thisDc")
    public val thisDc: Int,
    @SerialName("dc_options")
    @get:JvmName("dcOptions")
    public val dcOptions: List<DcOption>,
    @SerialName("dc_txt_domain_name")
    @get:JvmName("dcTxtDomainName")
    public val dcTxtDomainName: String,
    @SerialName("chat_size_max")
    @get:JvmName("chatSizeMax")
    public val chatSizeMax: Int,
    @SerialName("megagroup_size_max")
    @get:JvmName("megagroupSizeMax")
    public val megagroupSizeMax: Int,
    @SerialName("forwarded_count_max")
    @get:JvmName("forwardedCountMax")
    public val forwardedCountMax: Int,
    @SerialName("online_update_period_ms")
    @get:JvmName("onlineUpdatePeriodMs")
    public val onlineUpdatePeriodMs: Int,
    @SerialName("offline_blur_timeout_ms")
    @get:JvmName("offlineBlurTimeoutMs")
    public val offlineBlurTimeoutMs: Int,
    @SerialName("offline_idle_timeout_ms")
    @get:JvmName("offlineIdleTimeoutMs")
    public val offlineIdleTimeoutMs: Int,
    @SerialName("online_cloud_timeout_ms")
    @get:JvmName("onlineCloudTimeoutMs")
    public val onlineCloudTimeoutMs: Int,
    @SerialName("notify_cloud_delay_ms")
    @get:JvmName("notifyCloudDelayMs")
    public val notifyCloudDelayMs: Int,
    @SerialName("notify_default_delay_ms")
    @get:JvmName("notifyDefaultDelayMs")
    public val notifyDefaultDelayMs: Int,
    @SerialName("push_chat_period_ms")
    @get:JvmName("pushChatPeriodMs")
    public val pushChatPeriodMs: Int,
    @SerialName("push_chat_limit")
    @get:JvmName("pushChatLimit")
    public val pushChatLimit: Int,
    @SerialName("edit_time_limit")
    @get:JvmName("editTimeLimit")
    public val editTimeLimit: Int,
    @SerialName("revoke_time_limit")
    @get:JvmName("revokeTimeLimit")
    public val revokeTimeLimit: Int,
    @SerialName("revoke_pm_time_limit")
    @get:JvmName("revokePmTimeLimit")
    public val revokePmTimeLimit: Int,
    @SerialName("rating_e_decay")
    @get:JvmName("ratingEDecay")
    public val ratingEDecay: Int,
    @SerialName("stickers_recent_limit")
    @get:JvmName("stickersRecentLimit")
    public val stickersRecentLimit: Int,
    @SerialName("channels_read_media_period")
    @get:JvmName("channelsReadMediaPeriod")
    public val channelsReadMediaPeriod: Int,
    @SerialName("tmp_sessions")
    @TLConditional("flags", 0)
    @get:JvmName("tmpSessions")
    public val tmpSessions: Int? = null,
    @SerialName("call_receive_timeout_ms")
    @get:JvmName("callReceiveTimeoutMs")
    public val callReceiveTimeoutMs: Int,
    @SerialName("call_ring_timeout_ms")
    @get:JvmName("callRingTimeoutMs")
    public val callRingTimeoutMs: Int,
    @SerialName("call_connect_timeout_ms")
    @get:JvmName("callConnectTimeoutMs")
    public val callConnectTimeoutMs: Int,
    @SerialName("call_packet_timeout_ms")
    @get:JvmName("callPacketTimeoutMs")
    public val callPacketTimeoutMs: Int,
    @SerialName("me_url_prefix")
    @get:JvmName("meUrlPrefix")
    public val meUrlPrefix: String,
    @SerialName("autoupdate_url_prefix")
    @TLConditional("flags", 7)
    @get:JvmName("autoupdateUrlPrefix")
    public val autoupdateUrlPrefix: String? = null,
    @SerialName("gif_search_username")
    @TLConditional("flags", 9)
    @get:JvmName("gifSearchUsername")
    public val gifSearchUsername: String? = null,
    @SerialName("venue_search_username")
    @TLConditional("flags", 10)
    @get:JvmName("venueSearchUsername")
    public val venueSearchUsername: String? = null,
    @SerialName("img_search_username")
    @TLConditional("flags", 11)
    @get:JvmName("imgSearchUsername")
    public val imgSearchUsername: String? = null,
    @SerialName("static_maps_provider")
    @TLConditional("flags", 12)
    @get:JvmName("staticMapsProvider")
    public val staticMapsProvider: String? = null,
    @SerialName("caption_length_max")
    @get:JvmName("captionLengthMax")
    public val captionLengthMax: Int,
    @SerialName("message_length_max")
    @get:JvmName("messageLengthMax")
    public val messageLengthMax: Int,
    @SerialName("webfile_dc_id")
    @get:JvmName("webfileDcId")
    public val webfileDcId: Int,
    @SerialName("suggested_lang_code")
    @TLConditional("flags", 2)
    @get:JvmName("suggestedLangCode")
    public val suggestedLangCode: String? = null,
    @SerialName("lang_pack_version")
    @TLConditional("flags", 2)
    @get:JvmName("langPackVersion")
    public val langPackVersion: Int? = null,
    @SerialName("base_lang_pack_version")
    @TLConditional("flags", 2)
    @get:JvmName("baseLangPackVersion")
    public val baseLangPackVersion: Int? = null,
    @SerialName("reactions_default")
    @TLConditional("flags", 15)
    @get:JvmName("reactionsDefault")
    public val reactionsDefault: Reaction? = null,
    @SerialName("autologin_token")
    @TLConditional("flags", 16)
    @get:JvmName("autologinToken")
    public val autologinToken: String? = null,
) {
    public companion object
}
