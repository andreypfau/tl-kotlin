// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.Base64ByteStringSerializer
import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.io.bytestring.ByteString
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface InputFileLocation {
    @Serializable
    @SerialName("inputPeerPhotoFileLocationLegacy")
    @TLCombinatorId(0x27D69997)
    public data class InputPeerPhotoFileLocationLegacy(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("big")
        public val big: Unit? = null,
        @get:JvmName("peer")
        public val peer: InputPeer,
        @SerialName("volume_id")
        @get:JvmName("volumeId")
        public val volumeId: Long,
        @SerialName("local_id")
        @get:JvmName("localId")
        public val localId: Int,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputStickerSetThumbLegacy")
    @TLCombinatorId(0xDBAEAE9)
    public data class InputStickerSetThumbLegacy(
        @get:JvmName("stickerset")
        public val stickerset: InputStickerSet,
        @SerialName("volume_id")
        @get:JvmName("volumeId")
        public val volumeId: Long,
        @SerialName("local_id")
        @get:JvmName("localId")
        public val localId: Int,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputFileLocation")
    @TLCombinatorId(0xDFDAABE1)
    public data class InputFileLocation(
        @SerialName("volume_id")
        @get:JvmName("volumeId")
        public val volumeId: Long,
        @SerialName("local_id")
        @get:JvmName("localId")
        public val localId: Int,
        @get:JvmName("secret")
        public val secret: Long,
        @SerialName("file_reference")
        @get:JvmName("fileReference")
        public val fileReference: @Serializable(Base64ByteStringSerializer::class) ByteString,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputEncryptedFileLocation")
    @TLCombinatorId(0xF5235D55)
    public data class InputEncryptedFileLocation(
        @get:JvmName("id")
        public val id: Long,
        @SerialName("access_hash")
        @get:JvmName("accessHash")
        public val accessHash: Long,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputDocumentFileLocation")
    @TLCombinatorId(0xBAD07584)
    public data class InputDocumentFileLocation(
        @get:JvmName("id")
        public val id: Long,
        @SerialName("access_hash")
        @get:JvmName("accessHash")
        public val accessHash: Long,
        @SerialName("file_reference")
        @get:JvmName("fileReference")
        public val fileReference: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @SerialName("thumb_size")
        @get:JvmName("thumbSize")
        public val thumbSize: String,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputSecureFileLocation")
    @TLCombinatorId(0xCBC7EE28)
    public data class InputSecureFileLocation(
        @get:JvmName("id")
        public val id: Long,
        @SerialName("access_hash")
        @get:JvmName("accessHash")
        public val accessHash: Long,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputTakeoutFileLocation")
    @TLCombinatorId(0x29BE5899)
    public object InputTakeoutFileLocation : tl.telegram.InputFileLocation

    @Serializable
    @SerialName("inputPhotoFileLocation")
    @TLCombinatorId(0x40181FFE)
    public data class InputPhotoFileLocation(
        @get:JvmName("id")
        public val id: Long,
        @SerialName("access_hash")
        @get:JvmName("accessHash")
        public val accessHash: Long,
        @SerialName("file_reference")
        @get:JvmName("fileReference")
        public val fileReference: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @SerialName("thumb_size")
        @get:JvmName("thumbSize")
        public val thumbSize: String,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputPhotoLegacyFileLocation")
    @TLCombinatorId(0xD83466F3)
    public data class InputPhotoLegacyFileLocation(
        @get:JvmName("id")
        public val id: Long,
        @SerialName("access_hash")
        @get:JvmName("accessHash")
        public val accessHash: Long,
        @SerialName("file_reference")
        @get:JvmName("fileReference")
        public val fileReference: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @SerialName("volume_id")
        @get:JvmName("volumeId")
        public val volumeId: Long,
        @SerialName("local_id")
        @get:JvmName("localId")
        public val localId: Int,
        @get:JvmName("secret")
        public val secret: Long,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputPeerPhotoFileLocation")
    @TLCombinatorId(0x37257E99)
    public data class InputPeerPhotoFileLocation(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("big")
        public val big: Unit? = null,
        @get:JvmName("peer")
        public val peer: InputPeer,
        @SerialName("photo_id")
        @get:JvmName("photoId")
        public val photoId: Long,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputStickerSetThumb")
    @TLCombinatorId(0x9D84F3DB)
    public data class InputStickerSetThumb(
        @get:JvmName("stickerset")
        public val stickerset: InputStickerSet,
        @SerialName("thumb_version")
        @get:JvmName("thumbVersion")
        public val thumbVersion: Int,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    @Serializable
    @SerialName("inputGroupCallStream")
    @TLCombinatorId(0x598A92A)
    public data class InputGroupCallStream(
        @get:JvmName("flags")
        public val flags: Int,
        @get:JvmName("call")
        public val call: InputGroupCall,
        @SerialName("time_ms")
        @get:JvmName("timeMs")
        public val timeMs: Long,
        @get:JvmName("scale")
        public val scale: Int,
        @SerialName("video_channel")
        @TLConditional("flags", 0)
        @get:JvmName("videoChannel")
        public val videoChannel: Int? = null,
        @SerialName("video_quality")
        @TLConditional("flags", 0)
        @get:JvmName("videoQuality")
        public val videoQuality: Int? = null,
    ) : tl.telegram.InputFileLocation {
        public companion object
    }

    public companion object
}
