// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.Base64ByteStringSerializer
import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.io.bytestring.ByteString
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface InputBotInlineMessage {
    @Serializable
    @SerialName("inputBotInlineMessageMediaAuto")
    @TLCombinatorId(0x3380C786)
    public data class InputBotInlineMessageMediaAuto(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("invert_media")
        @TLConditional("flags", 3)
        @get:JvmName("invertMedia")
        public val invertMedia: Unit? = null,
        @get:JvmName("message")
        public val message: String,
        @TLConditional("flags", 1)
        @get:JvmName("entities")
        public val entities: List<MessageEntity>? = null,
        @SerialName("reply_markup")
        @TLConditional("flags", 2)
        @get:JvmName("replyMarkup")
        public val replyMarkup: ReplyMarkup? = null,
    ) : InputBotInlineMessage {
        public companion object
    }

    @Serializable
    @SerialName("inputBotInlineMessageText")
    @TLCombinatorId(0x3DCD7A87)
    public data class InputBotInlineMessageText(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("no_webpage")
        @TLConditional("flags", 0)
        @get:JvmName("noWebpage")
        public val noWebpage: Unit? = null,
        @SerialName("invert_media")
        @TLConditional("flags", 3)
        @get:JvmName("invertMedia")
        public val invertMedia: Unit? = null,
        @get:JvmName("message")
        public val message: String,
        @TLConditional("flags", 1)
        @get:JvmName("entities")
        public val entities: List<MessageEntity>? = null,
        @SerialName("reply_markup")
        @TLConditional("flags", 2)
        @get:JvmName("replyMarkup")
        public val replyMarkup: ReplyMarkup? = null,
    ) : InputBotInlineMessage {
        public companion object
    }

    @Serializable
    @SerialName("inputBotInlineMessageMediaGeo")
    @TLCombinatorId(0x96929A85)
    public data class InputBotInlineMessageMediaGeo(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("geo_point")
        @get:JvmName("geoPoint")
        public val geoPoint: InputGeoPoint,
        @TLConditional("flags", 0)
        @get:JvmName("heading")
        public val heading: Int? = null,
        @TLConditional("flags", 1)
        @get:JvmName("period")
        public val period: Int? = null,
        @SerialName("proximity_notification_radius")
        @TLConditional("flags", 3)
        @get:JvmName("proximityNotificationRadius")
        public val proximityNotificationRadius: Int? = null,
        @SerialName("reply_markup")
        @TLConditional("flags", 2)
        @get:JvmName("replyMarkup")
        public val replyMarkup: ReplyMarkup? = null,
    ) : InputBotInlineMessage {
        public companion object
    }

    @Serializable
    @SerialName("inputBotInlineMessageMediaVenue")
    @TLCombinatorId(0x417BBF11)
    public data class InputBotInlineMessageMediaVenue(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("geo_point")
        @get:JvmName("geoPoint")
        public val geoPoint: InputGeoPoint,
        @get:JvmName("title")
        public val title: String,
        @get:JvmName("address")
        public val address: String,
        @get:JvmName("provider")
        public val provider: String,
        @SerialName("venue_id")
        @get:JvmName("venueId")
        public val venueId: String,
        @SerialName("venue_type")
        @get:JvmName("venueType")
        public val venueType: String,
        @SerialName("reply_markup")
        @TLConditional("flags", 2)
        @get:JvmName("replyMarkup")
        public val replyMarkup: ReplyMarkup? = null,
    ) : InputBotInlineMessage {
        public companion object
    }

    @Serializable
    @SerialName("inputBotInlineMessageMediaContact")
    @TLCombinatorId(0xA6EDBFFD)
    public data class InputBotInlineMessageMediaContact(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("phone_number")
        @get:JvmName("phoneNumber")
        public val phoneNumber: String,
        @SerialName("first_name")
        @get:JvmName("firstName")
        public val firstName: String,
        @SerialName("last_name")
        @get:JvmName("lastName")
        public val lastName: String,
        @get:JvmName("vcard")
        public val vcard: String,
        @SerialName("reply_markup")
        @TLConditional("flags", 2)
        @get:JvmName("replyMarkup")
        public val replyMarkup: ReplyMarkup? = null,
    ) : InputBotInlineMessage {
        public companion object
    }

    @Serializable
    @SerialName("inputBotInlineMessageGame")
    @TLCombinatorId(0x4B425864)
    public data class InputBotInlineMessageGame(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("reply_markup")
        @TLConditional("flags", 2)
        @get:JvmName("replyMarkup")
        public val replyMarkup: ReplyMarkup? = null,
    ) : InputBotInlineMessage {
        public companion object
    }

    @Serializable
    @SerialName("inputBotInlineMessageMediaInvoice")
    @TLCombinatorId(0xD7E78225)
    public data class InputBotInlineMessageMediaInvoice(
        @get:JvmName("flags")
        public val flags: Int,
        @get:JvmName("title")
        public val title: String,
        @get:JvmName("description")
        public val description: String,
        @TLConditional("flags", 0)
        @get:JvmName("photo")
        public val photo: InputWebDocument? = null,
        @get:JvmName("invoice")
        public val invoice: Invoice,
        @get:JvmName("payload")
        public val payload: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @get:JvmName("provider")
        public val provider: String,
        @SerialName("provider_data")
        @get:JvmName("providerData")
        public val providerData: DataJSON,
        @SerialName("reply_markup")
        @TLConditional("flags", 2)
        @get:JvmName("replyMarkup")
        public val replyMarkup: ReplyMarkup? = null,
    ) : InputBotInlineMessage {
        public companion object
    }

    @Serializable
    @SerialName("inputBotInlineMessageMediaWebPage")
    @TLCombinatorId(0xBDDCC510)
    public data class InputBotInlineMessageMediaWebPage(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("invert_media")
        @TLConditional("flags", 3)
        @get:JvmName("invertMedia")
        public val invertMedia: Unit? = null,
        @SerialName("force_large_media")
        @TLConditional("flags", 4)
        @get:JvmName("forceLargeMedia")
        public val forceLargeMedia: Unit? = null,
        @SerialName("force_small_media")
        @TLConditional("flags", 5)
        @get:JvmName("forceSmallMedia")
        public val forceSmallMedia: Unit? = null,
        @TLConditional("flags", 6)
        @get:JvmName("optional")
        public val optional: Unit? = null,
        @get:JvmName("message")
        public val message: String,
        @TLConditional("flags", 1)
        @get:JvmName("entities")
        public val entities: List<MessageEntity>? = null,
        @get:JvmName("url")
        public val url: String,
        @SerialName("reply_markup")
        @TLConditional("flags", 2)
        @get:JvmName("replyMarkup")
        public val replyMarkup: ReplyMarkup? = null,
    ) : InputBotInlineMessage {
        public companion object
    }

    public companion object
}
