// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.Base64ByteStringSerializer
import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.io.bytestring.ByteString
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface DocumentAttribute {
    @Serializable
    @SerialName("documentAttributeImageSize")
    @TLCombinatorId(0x6C37C15C)
    public data class DocumentAttributeImageSize(
        @get:JvmName("w")
        public val w: Int,
        @get:JvmName("h")
        public val h: Int,
    ) : DocumentAttribute {
        public companion object
    }

    @Serializable
    @SerialName("documentAttributeAnimated")
    @TLCombinatorId(0x11B58939)
    public object DocumentAttributeAnimated : DocumentAttribute

    @Serializable
    @SerialName("documentAttributeSticker")
    @TLCombinatorId(0x6319D612)
    public data class DocumentAttributeSticker(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 1)
        @get:JvmName("mask")
        public val mask: Unit? = null,
        @get:JvmName("alt")
        public val alt: String,
        @get:JvmName("stickerset")
        public val stickerset: InputStickerSet,
        @SerialName("mask_coords")
        @TLConditional("flags", 0)
        @get:JvmName("maskCoords")
        public val maskCoords: MaskCoords? = null,
    ) : DocumentAttribute {
        public companion object
    }

    @Serializable
    @SerialName("documentAttributeVideo")
    @TLCombinatorId(0xD38FF1C2)
    public data class DocumentAttributeVideo(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("round_message")
        @TLConditional("flags", 0)
        @get:JvmName("roundMessage")
        public val roundMessage: Unit? = null,
        @SerialName("supports_streaming")
        @TLConditional("flags", 1)
        @get:JvmName("supportsStreaming")
        public val supportsStreaming: Unit? = null,
        @TLConditional("flags", 3)
        @get:JvmName("nosound")
        public val nosound: Unit? = null,
        @get:JvmName("duration")
        public val duration: Double,
        @get:JvmName("w")
        public val w: Int,
        @get:JvmName("h")
        public val h: Int,
        @SerialName("preload_prefix_size")
        @TLConditional("flags", 2)
        @get:JvmName("preloadPrefixSize")
        public val preloadPrefixSize: Int? = null,
    ) : DocumentAttribute {
        public companion object
    }

    @Serializable
    @SerialName("documentAttributeAudio")
    @TLCombinatorId(0x9852F9C6)
    public data class DocumentAttributeAudio(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 10)
        @get:JvmName("voice")
        public val voice: Unit? = null,
        @get:JvmName("duration")
        public val duration: Int,
        @TLConditional("flags", 0)
        @get:JvmName("title")
        public val title: String? = null,
        @TLConditional("flags", 1)
        @get:JvmName("performer")
        public val performer: String? = null,
        @TLConditional("flags", 2)
        @get:JvmName("waveform")
        public val waveform: @Serializable(Base64ByteStringSerializer::class) ByteString? = null,
    ) : DocumentAttribute {
        public companion object
    }

    @Serializable
    @SerialName("documentAttributeFilename")
    @TLCombinatorId(0x15590068)
    public data class DocumentAttributeFilename(
        @SerialName("file_name")
        @get:JvmName("fileName")
        public val fileName: String,
    ) : DocumentAttribute {
        public companion object
    }

    @Serializable
    @SerialName("documentAttributeHasStickers")
    @TLCombinatorId(0x9801D2F7)
    public object DocumentAttributeHasStickers : DocumentAttribute

    @Serializable
    @SerialName("documentAttributeCustomEmoji")
    @TLCombinatorId(0xFD149899)
    public data class DocumentAttributeCustomEmoji(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("free")
        public val free: Unit? = null,
        @SerialName("text_color")
        @TLConditional("flags", 1)
        @get:JvmName("textColor")
        public val textColor: Unit? = null,
        @get:JvmName("alt")
        public val alt: String,
        @get:JvmName("stickerset")
        public val stickerset: InputStickerSet,
    ) : DocumentAttribute {
        public companion object
    }

    public companion object
}
