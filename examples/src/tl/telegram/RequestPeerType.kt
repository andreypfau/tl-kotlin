// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface RequestPeerType {
    @Serializable
    @SerialName("requestPeerTypeUser")
    @TLCombinatorId(0x5F3B8A00)
    public data class RequestPeerTypeUser(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("bot")
        public val bot: Boolean? = null,
        @TLConditional("flags", 1)
        @get:JvmName("premium")
        public val premium: Boolean? = null,
    ) : RequestPeerType {
        public companion object
    }

    @Serializable
    @SerialName("requestPeerTypeChat")
    @TLCombinatorId(0xC9F06E1B)
    public data class RequestPeerTypeChat(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("creator")
        public val creator: Unit? = null,
        @SerialName("bot_participant")
        @TLConditional("flags", 5)
        @get:JvmName("botParticipant")
        public val botParticipant: Unit? = null,
        @SerialName("has_username")
        @TLConditional("flags", 3)
        @get:JvmName("hasUsername")
        public val hasUsername: Boolean? = null,
        @TLConditional("flags", 4)
        @get:JvmName("forum")
        public val forum: Boolean? = null,
        @SerialName("user_admin_rights")
        @TLConditional("flags", 1)
        @get:JvmName("userAdminRights")
        public val userAdminRights: ChatAdminRights? = null,
        @SerialName("bot_admin_rights")
        @TLConditional("flags", 2)
        @get:JvmName("botAdminRights")
        public val botAdminRights: ChatAdminRights? = null,
    ) : RequestPeerType {
        public companion object
    }

    @Serializable
    @SerialName("requestPeerTypeBroadcast")
    @TLCombinatorId(0x339BEF6C)
    public data class RequestPeerTypeBroadcast(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("creator")
        public val creator: Unit? = null,
        @SerialName("has_username")
        @TLConditional("flags", 3)
        @get:JvmName("hasUsername")
        public val hasUsername: Boolean? = null,
        @SerialName("user_admin_rights")
        @TLConditional("flags", 1)
        @get:JvmName("userAdminRights")
        public val userAdminRights: ChatAdminRights? = null,
        @SerialName("bot_admin_rights")
        @TLConditional("flags", 2)
        @get:JvmName("botAdminRights")
        public val botAdminRights: ChatAdminRights? = null,
    ) : RequestPeerType {
        public companion object
    }

    public companion object
}
