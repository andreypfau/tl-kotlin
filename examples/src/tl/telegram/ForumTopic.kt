// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface ForumTopic {
    @Serializable
    @SerialName("forumTopicDeleted")
    @TLCombinatorId(0x23F109B)
    public data class ForumTopicDeleted(
        @get:JvmName("id")
        public val id: Int,
    ) : tl.telegram.ForumTopic {
        public companion object
    }

    @Serializable
    @SerialName("forumTopic")
    @TLCombinatorId(0x71701DA9)
    public data class ForumTopic(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 1)
        @get:JvmName("my")
        public val my: Unit? = null,
        @TLConditional("flags", 2)
        @get:JvmName("closed")
        public val closed: Unit? = null,
        @TLConditional("flags", 3)
        @get:JvmName("pinned")
        public val pinned: Unit? = null,
        @TLConditional("flags", 5)
        @get:JvmName("short")
        public val short: Unit? = null,
        @TLConditional("flags", 6)
        @get:JvmName("hidden")
        public val hidden: Unit? = null,
        @get:JvmName("id")
        public val id: Int,
        @get:JvmName("date")
        public val date: Int,
        @get:JvmName("title")
        public val title: String,
        @SerialName("icon_color")
        @get:JvmName("iconColor")
        public val iconColor: Int,
        @SerialName("icon_emoji_id")
        @TLConditional("flags", 0)
        @get:JvmName("iconEmojiId")
        public val iconEmojiId: Long? = null,
        @SerialName("top_message")
        @get:JvmName("topMessage")
        public val topMessage: Int,
        @SerialName("read_inbox_max_id")
        @get:JvmName("readInboxMaxId")
        public val readInboxMaxId: Int,
        @SerialName("read_outbox_max_id")
        @get:JvmName("readOutboxMaxId")
        public val readOutboxMaxId: Int,
        @SerialName("unread_count")
        @get:JvmName("unreadCount")
        public val unreadCount: Int,
        @SerialName("unread_mentions_count")
        @get:JvmName("unreadMentionsCount")
        public val unreadMentionsCount: Int,
        @SerialName("unread_reactions_count")
        @get:JvmName("unreadReactionsCount")
        public val unreadReactionsCount: Int,
        @SerialName("from_id")
        @get:JvmName("fromId")
        public val fromId: Peer,
        @SerialName("notify_settings")
        @get:JvmName("notifySettings")
        public val notifySettings: PeerNotifySettings,
        @TLConditional("flags", 4)
        @get:JvmName("draft")
        public val draft: DraftMessage? = null,
    ) : tl.telegram.ForumTopic {
        public companion object
    }

    public companion object
}
