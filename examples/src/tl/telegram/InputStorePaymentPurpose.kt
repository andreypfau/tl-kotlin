// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.telegram

import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface InputStorePaymentPurpose {
    @Serializable
    @SerialName("inputStorePaymentPremiumSubscription")
    @TLCombinatorId(0xA6751E66)
    public data class InputStorePaymentPremiumSubscription(
        @get:JvmName("flags")
        public val flags: Int,
        @TLConditional("flags", 0)
        @get:JvmName("restore")
        public val restore: Unit? = null,
        @TLConditional("flags", 1)
        @get:JvmName("upgrade")
        public val upgrade: Unit? = null,
    ) : InputStorePaymentPurpose {
        public companion object
    }

    @Serializable
    @SerialName("inputStorePaymentGiftPremium")
    @TLCombinatorId(0x616F7FE8)
    public data class InputStorePaymentGiftPremium(
        @SerialName("user_id")
        @get:JvmName("userId")
        public val userId: InputUser,
        @get:JvmName("currency")
        public val currency: String,
        @get:JvmName("amount")
        public val amount: Long,
    ) : InputStorePaymentPurpose {
        public companion object
    }

    @Serializable
    @SerialName("inputStorePaymentPremiumGiftCode")
    @TLCombinatorId(0xA3805F3F)
    public data class InputStorePaymentPremiumGiftCode(
        @get:JvmName("flags")
        public val flags: Int,
        @get:JvmName("users")
        public val users: List<InputUser>,
        @SerialName("boost_peer")
        @TLConditional("flags", 0)
        @get:JvmName("boostPeer")
        public val boostPeer: InputPeer? = null,
        @get:JvmName("currency")
        public val currency: String,
        @get:JvmName("amount")
        public val amount: Long,
    ) : InputStorePaymentPurpose {
        public companion object
    }

    @Serializable
    @SerialName("inputStorePaymentPremiumGiveaway")
    @TLCombinatorId(0x7C9375E6)
    public data class InputStorePaymentPremiumGiveaway(
        @get:JvmName("flags")
        public val flags: Int,
        @SerialName("only_new_subscribers")
        @TLConditional("flags", 0)
        @get:JvmName("onlyNewSubscribers")
        public val onlyNewSubscribers: Unit? = null,
        @SerialName("boost_peer")
        @get:JvmName("boostPeer")
        public val boostPeer: InputPeer,
        @SerialName("additional_peers")
        @TLConditional("flags", 1)
        @get:JvmName("additionalPeers")
        public val additionalPeers: List<InputPeer>? = null,
        @SerialName("countries_iso2")
        @TLConditional("flags", 2)
        @get:JvmName("countriesIso2")
        public val countriesIso2: List<String>? = null,
        @SerialName("random_id")
        @get:JvmName("randomId")
        public val randomId: Long,
        @SerialName("until_date")
        @get:JvmName("untilDate")
        public val untilDate: Int,
        @get:JvmName("currency")
        public val currency: String,
        @get:JvmName("amount")
        public val amount: Long,
    ) : InputStorePaymentPurpose {
        public companion object
    }

    public companion object
}
