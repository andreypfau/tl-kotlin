// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.mtproto.p.q.`inner`

import io.github.andreypfau.tl.serialization.Base64ByteStringSerializer
import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLFixedSize
import kotlin.jvm.JvmName
import kotlinx.io.bytestring.ByteString
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface PQInnerData {
    @Serializable
    @SerialName("p_q_inner_data_dc")
    @TLCombinatorId(0xA9F55F95)
    public data class PQInnerDataDc(
        @get:JvmName("pq")
        public val pq: String,
        @get:JvmName("p")
        public val p: String,
        @get:JvmName("q")
        public val q: String,
        @TLFixedSize(value = 16)
        @get:JvmName("nonce")
        public val nonce: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @SerialName("server_nonce")
        @TLFixedSize(value = 16)
        @get:JvmName("serverNonce")
        public val serverNonce: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @SerialName("new_nonce")
        @TLFixedSize(value = 32)
        @get:JvmName("newNonce")
        public val newNonce: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @get:JvmName("dc")
        public val dc: Int,
    ) : PQInnerData {
        public companion object
    }

    @Serializable
    @SerialName("p_q_inner_data_temp_dc")
    @TLCombinatorId(0x56FDDF88)
    public data class PQInnerDataTempDc(
        @get:JvmName("pq")
        public val pq: String,
        @get:JvmName("p")
        public val p: String,
        @get:JvmName("q")
        public val q: String,
        @TLFixedSize(value = 16)
        @get:JvmName("nonce")
        public val nonce: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @SerialName("server_nonce")
        @TLFixedSize(value = 16)
        @get:JvmName("serverNonce")
        public val serverNonce: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @SerialName("new_nonce")
        @TLFixedSize(value = 32)
        @get:JvmName("newNonce")
        public val newNonce: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @get:JvmName("dc")
        public val dc: Int,
        @SerialName("expires_in")
        @get:JvmName("expiresIn")
        public val expiresIn: Int,
    ) : PQInnerData {
        public companion object
    }

    public companion object
}
