// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.td

import io.github.andreypfau.tl.serialization.TLCombinatorId
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
@SerialName("chat")
@TLCombinatorId(0x22668EB8)
public data class Chat(
    @get:JvmName("id")
    public val id: Long,
    @get:JvmName("type")
    public val type: ChatType,
    @get:JvmName("title")
    public val title: String,
    @get:JvmName("photo")
    public val photo: ChatPhotoInfo,
    @SerialName("accent_color_id")
    @get:JvmName("accentColorId")
    public val accentColorId: Int,
    @SerialName("background_custom_emoji_id")
    @get:JvmName("backgroundCustomEmojiId")
    public val backgroundCustomEmojiId: Long,
    @get:JvmName("permissions")
    public val permissions: ChatPermissions,
    @SerialName("last_message")
    @get:JvmName("lastMessage")
    public val lastMessage: Message,
    @get:JvmName("positions")
    public val positions: List<ChatPosition>,
    @SerialName("message_sender_id")
    @get:JvmName("messageSenderId")
    public val messageSenderId: MessageSender,
    @SerialName("block_list")
    @get:JvmName("blockList")
    public val blockList: BlockList,
    @SerialName("has_protected_content")
    @get:JvmName("hasProtectedContent")
    public val hasProtectedContent: Boolean,
    @SerialName("is_translatable")
    @get:JvmName("isTranslatable")
    public val isTranslatable: Boolean,
    @SerialName("is_marked_as_unread")
    @get:JvmName("isMarkedAsUnread")
    public val isMarkedAsUnread: Boolean,
    @SerialName("has_scheduled_messages")
    @get:JvmName("hasScheduledMessages")
    public val hasScheduledMessages: Boolean,
    @SerialName("can_be_deleted_only_for_self")
    @get:JvmName("canBeDeletedOnlyForSelf")
    public val canBeDeletedOnlyForSelf: Boolean,
    @SerialName("can_be_deleted_for_all_users")
    @get:JvmName("canBeDeletedForAllUsers")
    public val canBeDeletedForAllUsers: Boolean,
    @SerialName("can_be_reported")
    @get:JvmName("canBeReported")
    public val canBeReported: Boolean,
    @SerialName("default_disable_notification")
    @get:JvmName("defaultDisableNotification")
    public val defaultDisableNotification: Boolean,
    @SerialName("unread_count")
    @get:JvmName("unreadCount")
    public val unreadCount: Int,
    @SerialName("last_read_inbox_message_id")
    @get:JvmName("lastReadInboxMessageId")
    public val lastReadInboxMessageId: Long,
    @SerialName("last_read_outbox_message_id")
    @get:JvmName("lastReadOutboxMessageId")
    public val lastReadOutboxMessageId: Long,
    @SerialName("unread_mention_count")
    @get:JvmName("unreadMentionCount")
    public val unreadMentionCount: Int,
    @SerialName("unread_reaction_count")
    @get:JvmName("unreadReactionCount")
    public val unreadReactionCount: Int,
    @SerialName("notification_settings")
    @get:JvmName("notificationSettings")
    public val notificationSettings: ChatNotificationSettings,
    @SerialName("available_reactions")
    @get:JvmName("availableReactions")
    public val availableReactions: ChatAvailableReactions,
    @SerialName("message_auto_delete_time")
    @get:JvmName("messageAutoDeleteTime")
    public val messageAutoDeleteTime: Int,
    @get:JvmName("background")
    public val background: ChatBackground,
    @SerialName("theme_name")
    @get:JvmName("themeName")
    public val themeName: String,
    @SerialName("action_bar")
    @get:JvmName("actionBar")
    public val actionBar: ChatActionBar,
    @SerialName("video_chat")
    @get:JvmName("videoChat")
    public val videoChat: VideoChat,
    @SerialName("pending_join_requests")
    @get:JvmName("pendingJoinRequests")
    public val pendingJoinRequests: ChatJoinRequestsInfo,
    @SerialName("reply_markup_message_id")
    @get:JvmName("replyMarkupMessageId")
    public val replyMarkupMessageId: Long,
    @SerialName("draft_message")
    @get:JvmName("draftMessage")
    public val draftMessage: DraftMessage,
    @SerialName("client_data")
    @get:JvmName("clientData")
    public val clientData: String,
) {
    public companion object
}
