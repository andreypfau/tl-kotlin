// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.td

import io.github.andreypfau.tl.serialization.Base64ByteStringSerializer
import io.github.andreypfau.tl.serialization.TLCombinatorId
import kotlin.jvm.JvmName
import kotlinx.io.bytestring.ByteString
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface CallState {
    @Serializable
    @SerialName("callStatePending")
    @TLCombinatorId(0x3FF56C2C)
    public data class CallStatePending(
        @SerialName("is_created")
        @get:JvmName("isCreated")
        public val isCreated: Boolean,
        @SerialName("is_received")
        @get:JvmName("isReceived")
        public val isReceived: Boolean,
    ) : CallState {
        public companion object
    }

    @Serializable
    @SerialName("callStateExchangingKeys")
    @TLCombinatorId(0x91D77A65)
    public object CallStateExchangingKeys : CallState

    @Serializable
    @SerialName("callStateReady")
    @TLCombinatorId(0x88C8C7CD)
    public data class CallStateReady(
        @get:JvmName("protocol")
        public val protocol: CallProtocol,
        @get:JvmName("servers")
        public val servers: List<CallServer>,
        @get:JvmName("config")
        public val config: String,
        @SerialName("encryption_key")
        @get:JvmName("encryptionKey")
        public val encryptionKey: @Serializable(Base64ByteStringSerializer::class) ByteString,
        @get:JvmName("emojis")
        public val emojis: List<String>,
        @SerialName("allow_p2p")
        @get:JvmName("allowP2p")
        public val allowP2p: Boolean,
    ) : CallState {
        public companion object
    }

    @Serializable
    @SerialName("callStateHangingUp")
    @TLCombinatorId(0x80D0F2AA)
    public object CallStateHangingUp : CallState

    @Serializable
    @SerialName("callStateDiscarded")
    @TLCombinatorId(0x531B7C45)
    public data class CallStateDiscarded(
        @get:JvmName("reason")
        public val reason: CallDiscardReason,
        @SerialName("need_rating")
        @get:JvmName("needRating")
        public val needRating: Boolean,
        @SerialName("need_debug_information")
        @get:JvmName("needDebugInformation")
        public val needDebugInformation: Boolean,
        @SerialName("need_log")
        @get:JvmName("needLog")
        public val needLog: Boolean,
    ) : CallState {
        public companion object
    }

    @Serializable
    @SerialName("callStateError")
    @TLCombinatorId(0xC5DF6495)
    public data class CallStateError(
        @get:JvmName("error")
        public val error: Error,
    ) : CallState {
        public companion object
    }

    public companion object
}
