// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.ton.catchain.block.`inner`

import io.github.andreypfau.tl.serialization.TLCombinatorId
import kotlin.jvm.JvmName
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator
import tl.ton.catchain.CatchainBlock
import tl.ton.catchain.block.CatchainBlockDep

@Serializable
@JsonClassDiscriminator("@type")
public sealed interface CatchainBlockInnerData {
    @Serializable
    @SerialName("catchain.block.data.badBlock")
    @TLCombinatorId(0xB6025A56)
    public data class BadBlock(
        @get:JvmName("block")
        public val block: CatchainBlock,
    ) : CatchainBlockInnerData {
        public companion object
    }

    @Serializable
    @SerialName("catchain.block.data.fork")
    @TLCombinatorId(0x647A3A52)
    public data class Fork(
        @get:JvmName("left")
        public val left: CatchainBlockDep,
        @get:JvmName("right")
        public val right: CatchainBlockDep,
    ) : CatchainBlockInnerData {
        public companion object
    }

    @Serializable
    @SerialName("catchain.block.data.nop")
    @TLCombinatorId(0x5482B4D0)
    public object Nop : CatchainBlockInnerData

    public companion object
}
