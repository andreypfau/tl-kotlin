// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.ton.storage.daemon

import io.github.andreypfau.tl.serialization.Base64ByteStringSerializer
import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import io.github.andreypfau.tl.serialization.TLFixedSize
import kotlin.jvm.JvmName
import kotlinx.io.bytestring.ByteString
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
@SerialName("storage.daemon.torrent")
@TLCombinatorId(0x15B30B67)
public data class StorageDaemonTorrent(
    @TLFixedSize(value = 32)
    @get:JvmName("hash")
    public val hash: @Serializable(Base64ByteStringSerializer::class) ByteString,
    @get:JvmName("flags")
    public val flags: Int,
    @SerialName("total_size")
    @TLConditional("flags", 0)
    @get:JvmName("totalSize")
    public val totalSize: Long? = null,
    @TLConditional("flags", 0)
    @get:JvmName("description")
    public val description: String? = null,
    @SerialName("files_count")
    @TLConditional("flags", 1)
    @get:JvmName("filesCount")
    public val filesCount: Long? = null,
    @SerialName("included_size")
    @TLConditional("flags", 1)
    @get:JvmName("includedSize")
    public val includedSize: Long? = null,
    @SerialName("dir_name")
    @TLConditional("flags", 1)
    @get:JvmName("dirName")
    public val dirName: String? = null,
    @SerialName("downloaded_size")
    @get:JvmName("downloadedSize")
    public val downloadedSize: Long,
    @SerialName("added_at")
    @get:JvmName("addedAt")
    public val addedAt: Int,
    @SerialName("root_dir")
    @get:JvmName("rootDir")
    public val rootDir: String,
    @SerialName("active_download")
    @get:JvmName("activeDownload")
    public val activeDownload: Boolean,
    @SerialName("active_upload")
    @get:JvmName("activeUpload")
    public val activeUpload: Boolean,
    @get:JvmName("completed")
    public val completed: Boolean,
    @SerialName("download_speed")
    @get:JvmName("downloadSpeed")
    public val downloadSpeed: Double,
    @SerialName("upload_speed")
    @get:JvmName("uploadSpeed")
    public val uploadSpeed: Double,
    @SerialName("fatal_error")
    @TLConditional("flags", 2)
    @get:JvmName("fatalError")
    public val fatalError: String? = null,
) {
    public companion object
}
