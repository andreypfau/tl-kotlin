// This file is generated by TLGenerator.kt
// Do not edit manually!
package tl.ton.storage.daemon

import io.github.andreypfau.tl.serialization.Base64ByteStringSerializer
import io.github.andreypfau.tl.serialization.TLCombinatorId
import io.github.andreypfau.tl.serialization.TLConditional
import kotlin.jvm.JvmName
import kotlinx.io.bytestring.ByteString
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
@SerialName("storage.daemon.torrentPiecesInfo")
@TLCombinatorId(0x091CAB91)
public data class StorageDaemonTorrentPiecesInfo(
    @get:JvmName("flags")
    public val flags: Int,
    @SerialName("total_pieces")
    @get:JvmName("totalPieces")
    public val totalPieces: Long,
    @SerialName("piece_size")
    @get:JvmName("pieceSize")
    public val pieceSize: Int,
    @SerialName("range_l")
    @get:JvmName("rangeL")
    public val rangeL: Long,
    @SerialName("range_r")
    @get:JvmName("rangeR")
    public val rangeR: Long,
    @SerialName("piece_ready_bitset")
    @get:JvmName("pieceReadyBitset")
    public val pieceReadyBitset: @Serializable(Base64ByteStringSerializer::class) ByteString,
    @TLConditional("flags", 0)
    @get:JvmName("files")
    public val files: List<StorageDaemonFilePiecesInfo>? = null,
) {
    public companion object
}
